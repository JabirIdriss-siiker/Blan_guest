const mongoose = require('mongoose');

const laundryTaskSchema = new mongoose.Schema({
  apartment: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Apartment',
    required: true,
  },
  scheduledAt: {
    type: Date,
    required: true,
  },
  items: [{
    label: {
      type: String,
      required: true,
      trim: true,
    },
    qty: {
      type: Number,
      required: true,
      min: 1,
      default: 1,
    },
  }],
  assignedTo: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true,
  },
  status: {
    type: String,
    enum: ['À préparer', 'Préparé', 'Problème'],
    default: 'À préparer',
  },
  autoGenerated: {
    type: Boolean,
    default: false,
  },
  notes: {
    type: String,
    trim: true,
  },
  completedAt: {
    type: Date,
  },
  createdBy: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true,
  },
  createdAt: {
    type: Date,
    default: Date.now,
  },
  updatedAt: {
    type: Date,
    default: Date.now,
  },
});

// Compound index to prevent duplicate auto tasks
laundryTaskSchema.index({ apartment: 1, scheduledAt: 1, autoGenerated: 1 }, { unique: true });

laundryTaskSchema.pre('save', function (next) {
  this.updatedAt = Date.now();
  if (this.status === 'Préparé' && !this.completedAt) {
    this.completedAt = new Date();
  }
  next();
});

module.exports = mongoose.model('LaundryTask', laundryTaskSchema);